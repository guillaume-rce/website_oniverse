{"ast":null,"code":"import React from 'react';\nimport key from 'keymaster';\nimport DetectShift from '../modules/detect-shift';\nexport var useKeyboardControls = function (keyboardMap, dispatch) {\n  React.useEffect(function () {\n    var keyboardDispatch = Object.entries(keyboardMap).reduce(function (output, _a) {\n      var key = _a[0],\n        action = _a[1];\n      output[key] = function () {\n        return dispatch(action);\n      };\n      return output;\n    }, {});\n    addKeyboardEvents(keyboardDispatch);\n    return function () {\n      return removeKeyboardEvents(keyboardDispatch);\n    };\n  }, [keyboardMap, dispatch]);\n};\nfunction addKeyboardEvents(keyboardMap) {\n  Object.keys(keyboardMap).forEach(function (k) {\n    var fn = keyboardMap[k];\n    if (k === 'shift' && fn) {\n      DetectShift.bind(fn);\n    } else if (fn) {\n      key(k, fn);\n    }\n  });\n}\nfunction removeKeyboardEvents(keyboardMap) {\n  Object.keys(keyboardMap).forEach(function (k) {\n    if (k === 'shift') {\n      var fn = keyboardMap[k];\n      fn && DetectShift.unbind(fn);\n    } else {\n      key.unbind(k);\n    }\n  });\n}","map":{"version":3,"names":["React","key","DetectShift","useKeyboardControls","keyboardMap","dispatch","useEffect","keyboardDispatch","Object","entries","reduce","output","_a","action","addKeyboardEvents","removeKeyboardEvents","keys","forEach","k","fn","bind","unbind"],"sources":["C:/Users/groch/Documents/projets/futur/site_web/site-web-oniverse/node_modules/react-tetris/lib/hooks/useKeyboardControls.js"],"sourcesContent":["import React from 'react';\nimport key from 'keymaster';\nimport DetectShift from '../modules/detect-shift';\nexport var useKeyboardControls = function (keyboardMap, dispatch) {\n    React.useEffect(function () {\n        var keyboardDispatch = Object.entries(keyboardMap).reduce(function (output, _a) {\n            var key = _a[0], action = _a[1];\n            output[key] = function () { return dispatch(action); };\n            return output;\n        }, {});\n        addKeyboardEvents(keyboardDispatch);\n        return function () { return removeKeyboardEvents(keyboardDispatch); };\n    }, [keyboardMap, dispatch]);\n};\nfunction addKeyboardEvents(keyboardMap) {\n    Object.keys(keyboardMap).forEach(function (k) {\n        var fn = keyboardMap[k];\n        if (k === 'shift' && fn) {\n            DetectShift.bind(fn);\n        }\n        else if (fn) {\n            key(k, fn);\n        }\n    });\n}\nfunction removeKeyboardEvents(keyboardMap) {\n    Object.keys(keyboardMap).forEach(function (k) {\n        if (k === 'shift') {\n            var fn = keyboardMap[k];\n            fn && DetectShift.unbind(fn);\n        }\n        else {\n            key.unbind(k);\n        }\n    });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAO,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,WAAW,EAAEC,QAAQ,EAAE;EAC9DL,KAAK,CAACM,SAAS,CAAC,YAAY;IACxB,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,OAAO,CAACL,WAAW,CAAC,CAACM,MAAM,CAAC,UAAUC,MAAM,EAAEC,EAAE,EAAE;MAC5E,IAAIX,GAAG,GAAGW,EAAE,CAAC,CAAC,CAAC;QAAEC,MAAM,GAAGD,EAAE,CAAC,CAAC,CAAC;MAC/BD,MAAM,CAACV,GAAG,CAAC,GAAG,YAAY;QAAE,OAAOI,QAAQ,CAACQ,MAAM,CAAC;MAAE,CAAC;MACtD,OAAOF,MAAM;IACjB,CAAC,EAAE,CAAC,CAAC,CAAC;IACNG,iBAAiB,CAACP,gBAAgB,CAAC;IACnC,OAAO,YAAY;MAAE,OAAOQ,oBAAoB,CAACR,gBAAgB,CAAC;IAAE,CAAC;EACzE,CAAC,EAAE,CAACH,WAAW,EAAEC,QAAQ,CAAC,CAAC;AAC/B,CAAC;AACD,SAASS,iBAAiBA,CAACV,WAAW,EAAE;EACpCI,MAAM,CAACQ,IAAI,CAACZ,WAAW,CAAC,CAACa,OAAO,CAAC,UAAUC,CAAC,EAAE;IAC1C,IAAIC,EAAE,GAAGf,WAAW,CAACc,CAAC,CAAC;IACvB,IAAIA,CAAC,KAAK,OAAO,IAAIC,EAAE,EAAE;MACrBjB,WAAW,CAACkB,IAAI,CAACD,EAAE,CAAC;IACxB,CAAC,MACI,IAAIA,EAAE,EAAE;MACTlB,GAAG,CAACiB,CAAC,EAAEC,EAAE,CAAC;IACd;EACJ,CAAC,CAAC;AACN;AACA,SAASJ,oBAAoBA,CAACX,WAAW,EAAE;EACvCI,MAAM,CAACQ,IAAI,CAACZ,WAAW,CAAC,CAACa,OAAO,CAAC,UAAUC,CAAC,EAAE;IAC1C,IAAIA,CAAC,KAAK,OAAO,EAAE;MACf,IAAIC,EAAE,GAAGf,WAAW,CAACc,CAAC,CAAC;MACvBC,EAAE,IAAIjB,WAAW,CAACmB,MAAM,CAACF,EAAE,CAAC;IAChC,CAAC,MACI;MACDlB,GAAG,CAACoB,MAAM,CAACH,CAAC,CAAC;IACjB;EACJ,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}