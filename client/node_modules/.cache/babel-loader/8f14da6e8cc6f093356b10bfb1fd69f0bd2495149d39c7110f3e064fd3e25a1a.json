{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const ImageGen = () => {\n  _s();\n  const [image, setImage] = useState('');\n  const [username, setUsername] = useState('');\n\n  // The goal is to generate a random image based on the username by converting the username to BITS\n\n  const generateImage = username => {\n    // Convert the username to binary\n    const binaryString = username.split('').map(char => char.charCodeAt(0).toString(2)).join('');\n    console.log(binaryString);\n  };\n};\n_s(ImageGen, \"jGhIPsBLQee6ki5QX/IEUizw8Nk=\");\n_c = ImageGen;\nvar _c;\n$RefreshReg$(_c, \"ImageGen\");","map":{"version":3,"names":["useState","ImageGen","_s","image","setImage","username","setUsername","generateImage","binaryString","split","map","char","charCodeAt","toString","join","console","log","_c","$RefreshReg$"],"sources":["C:/Users/groch/Documents/projets/futur/site_web/site-web-oniverse/src/app/ImageGen.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const ImageGen = () => {\r\n    const [image, setImage] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    // The goal is to generate a random image based on the username by converting the username to BITS\r\n\r\n    const generateImage = (username) => {\r\n        // Convert the username to binary\r\n        const binaryString = username.split('').map((char) => char.charCodeAt(0).toString(2)).join('');\r\n        console.log(binaryString);\r\n    };\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE5C;;EAEA,MAAMO,aAAa,GAAIF,QAAQ,IAAK;IAChC;IACA,MAAMG,YAAY,GAAGH,QAAQ,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IAC9FC,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;EAC7B,CAAC;AACL,CAAC;AAAAN,EAAA,CAXYD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}